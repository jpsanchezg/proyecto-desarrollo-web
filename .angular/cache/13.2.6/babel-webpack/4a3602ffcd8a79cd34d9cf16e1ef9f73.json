{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Juan Camilo Merchan\\\\Documents\\\\Web\\\\proyecto-desarrollo-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { User } from 'src/app/model/user';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserControllerService {\n  constructor(http) {\n    this.http = http;\n    this.currentUser = null;\n    this.listUsers = [];\n  }\n\n  login(username, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        var responseBody = yield _this.http.post(`${environment.baseURL}/login`, {\n          username: username,\n          password: password\n        }, {\n          responseType: \"text\"\n        }).toPromise();\n        window.sessionStorage.setItem(\"jwt\", responseBody);\n        _this.currentUser = null;\n      } catch (e) {\n        console.error(e);\n        _this.currentUser = null;\n      }\n    })();\n  }\n\n  addUser(name, username, password) {\n    return false;\n  }\n\n  modUser(name, username, password) {\n    this.currentUser.setName(name);\n    this.currentUser.setUsername(username); //TODO: enviar peticion de modificacion de usuario en backend\n  }\n\n  getCurrentUser() {\n    return this.currentUser;\n  }\n\n  getAllUsers() {\n    return this.listUsers;\n  }\n\n  setCurrentUser(name) {//TODO: traer usuario de backend\n  }\n\n  getUserByUsername(username) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var user = new User();\n\n      try {\n        var json = yield _this2.http.get(`${environment.baseURL}/user/${username}`).toPromise();\n        user.setUsername(json.username);\n        user.setName(json.name);\n        user.setIsAdmin(json.admin);\n        var shoppingCart = json.shoppingCart;\n        shoppingCart.forEach(element => {\n          user.addPurchase(element.productId, element.quantity);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      return user;\n    })();\n  }\n\n  removeUser(User) {//TODO: enviar solicitud de eliminar en backend\n  }\n\n  logOut() {\n    this.currentUser = null; //TODO: eliminar el jwt del storage\n  }\n\n}\n\nUserControllerService.ɵfac = function UserControllerService_Factory(t) {\n  return new (t || UserControllerService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nUserControllerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserControllerService,\n  factory: UserControllerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Juan Camilo Merchan/Documents/Web/proyecto-desarrollo-web/src/app/service/user-controller/user-controller.service.ts"],"names":["User","environment","i0","i1","UserControllerService","constructor","http","currentUser","listUsers","login","username","password","responseBody","post","baseURL","responseType","toPromise","window","sessionStorage","setItem","e","console","error","addUser","name","modUser","setName","setUsername","getCurrentUser","getAllUsers","setCurrentUser","getUserByUsername","user","json","get","setIsAdmin","admin","shoppingCart","forEach","element","addPurchase","productId","quantity","removeUser","logOut","ɵfac","UserControllerService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { User } from 'src/app/model/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class UserControllerService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.currentUser = null;\r\n        this.listUsers = [];\r\n    }\r\n    async login(username, password) {\r\n        try {\r\n            var responseBody = await this.http.post(`${environment.baseURL}/login`, { username: username, password: password }, { responseType: \"text\" }).toPromise();\r\n            window.sessionStorage.setItem(\"jwt\", responseBody);\r\n            this.currentUser = null;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            this.currentUser = null;\r\n        }\r\n    }\r\n    addUser(name, username, password) {\r\n        return false;\r\n    }\r\n    modUser(name, username, password) {\r\n        this.currentUser.setName(name);\r\n        this.currentUser.setUsername(username);\r\n        //TODO: enviar peticion de modificacion de usuario en backend\r\n    }\r\n    getCurrentUser() {\r\n        return this.currentUser;\r\n    }\r\n    getAllUsers() {\r\n        return this.listUsers;\r\n    }\r\n    setCurrentUser(name) {\r\n        //TODO: traer usuario de backend\r\n    }\r\n    async getUserByUsername(username) {\r\n        var user = new User();\r\n        try {\r\n            var json = await this.http.get(`${environment.baseURL}/user/${username}`).toPromise();\r\n            user.setUsername(json.username);\r\n            user.setName(json.name);\r\n            user.setIsAdmin(json.admin);\r\n            var shoppingCart = json.shoppingCart;\r\n            shoppingCart.forEach((element) => {\r\n                user.addPurchase(element.productId, element.quantity);\r\n            });\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n        return user;\r\n    }\r\n    removeUser(User) {\r\n        //TODO: enviar solicitud de eliminar en backend\r\n    }\r\n    logOut() {\r\n        this.currentUser = null;\r\n        //TODO: eliminar el jwt del storage\r\n    }\r\n}\r\nUserControllerService.ɵfac = function UserControllerService_Factory(t) { return new (t || UserControllerService)(i0.ɵɵinject(i1.HttpClient)); };\r\nUserControllerService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserControllerService, factory: UserControllerService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}