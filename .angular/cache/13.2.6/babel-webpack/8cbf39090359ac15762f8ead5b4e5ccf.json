{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\juanp\\\\Documents\\\\github\\\\proyecto-desarrollo-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { Invoice } from 'src/app/model/invoice';\nimport { Purchase } from 'src/app/model/purchase';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../product-controller/product-controller.service\";\nimport * as i3 from \"../user-controller/user-controller.service\";\nexport let InvoiceControllerService = /*#__PURE__*/(() => {\n  class InvoiceControllerService {\n    constructor(http, productControllerService, userControllerService) {\n      this.http = http;\n      this.productControllerService = productControllerService;\n      this.userControllerService = userControllerService;\n      this.listInvoices = [];\n      this.lastId = 0;\n    }\n\n    getListInvoices() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var json = yield _this.http.get(`${environment.baseURL}/invoice/list/${_this.userControllerService.getCurrentUser().getUsername()}`).toPromise();\n        _this.listInvoices = [];\n        json.forEach(element => {\n          var listPurchases = [];\n          element.listPurchases.forEach(element2 => {\n            var purchase = new Purchase(element2.productId, element2.quantity);\n            purchase.setId(element2.id);\n            listPurchases.push(purchase);\n          });\n          var invoice = new Invoice(element.id, element.userId, listPurchases, element.priceTotal);\n\n          _this.listInvoices.push(invoice);\n        });\n        return _this.listInvoices;\n      })();\n    }\n\n    addInvoice(username, listPurchases) {\n      let purchaseTotal = 0;\n\n      for (let purchase of listPurchases) {\n        purchaseTotal += this.productControllerService.findProductById(purchase.getProductId()).getPrice() * purchase.getQuantity();\n      }\n\n      this.http.post(`${environment.baseURL}/invoice/create/${username}`, {\n        purchaseTotal: purchaseTotal,\n        listPurchases: listPurchases\n      }).toPromise();\n    }\n\n    findInvoicesByRangeDates(date1, date2) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        let params = `${environment.baseURL}/invoice/list/${date1.getDate()}-${date1.getMonth()}-${date1.getFullYear()}/${date2.getDate()}-${date2.getMonth()}-${date2.getFullYear()}`;\n        let json = yield _this2.http.get(params).toPromise();\n        _this2.listInvoices = [];\n        json.forEach(element => {\n          var listPurchases = [];\n          element.listPurchases.forEach(element2 => {\n            var purchase = new Purchase(element2.productId, element2.quantity);\n            purchase.setId(element2.id);\n            listPurchases.push(purchase);\n          });\n          var invoice = new Invoice(element.id, element.userId, listPurchases, element.priceTotal);\n\n          _this2.listInvoices.push(invoice);\n        });\n        return _this2.listInvoices;\n      })();\n    }\n\n    findInvoicesByUsername(username) {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        let json = yield _this3.http.get(`${environment.baseURL}/invoice/list/${username}`).toPromise();\n        _this3.listInvoices = [];\n        json.forEach(element => {\n          var listPurchases = [];\n          element.listPurchases.forEach(element2 => {\n            var purchase = new Purchase(element2.productId, element2.quantity);\n            purchase.setId(element2.id);\n            listPurchases.push(purchase);\n          });\n          var invoice = new Invoice(element.id, element.userId, listPurchases, element.priceTotal);\n\n          _this3.listInvoices.push(invoice);\n        });\n        return _this3.listInvoices;\n      })();\n    }\n\n    findInvoicesByUserIdAndDateRange(username, date1, date2) {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        let json = yield _this4.http.get(`${environment.baseURL}/invoice/list/${date1.getDate()}-${date1.getMonth()}-${date1.getFullYear()}/${date2.getDate()}-${date2.getMonth()}-${date2.getFullYear()}/${username}`).toPromise();\n        _this4.listInvoices = [];\n        json.forEach(element => {\n          var listPurchases = [];\n          element.listPurchases.forEach(element2 => {\n            var purchase = new Purchase(element2.productId, element2.quantity);\n            purchase.setId(element2.id);\n            listPurchases.push(purchase);\n          });\n          var invoice = new Invoice(element.id, element.userId, listPurchases, element.priceTotal);\n\n          _this4.listInvoices.push(invoice);\n        });\n        return _this4.listInvoices;\n      })();\n    }\n\n    removeInvoiceById(id) {\n      this.http.delete(`${environment.baseURL}/invoice/delete/${id}`).toPromise();\n    }\n\n    removeInvoice(Invoice) {\n      this.removeInvoiceById(Invoice.getId());\n    }\n\n  }\n\n  InvoiceControllerService.ɵfac = function InvoiceControllerService_Factory(t) {\n    return new (t || InvoiceControllerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ProductControllerService), i0.ɵɵinject(i3.UserControllerService));\n  };\n\n  InvoiceControllerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InvoiceControllerService,\n    factory: InvoiceControllerService.ɵfac,\n    providedIn: 'root'\n  });\n  return InvoiceControllerService;\n})();","map":null,"metadata":{},"sourceType":"module"}