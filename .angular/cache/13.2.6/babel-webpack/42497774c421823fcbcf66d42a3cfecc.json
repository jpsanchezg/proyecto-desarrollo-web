{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Juan Camilo Merchan\\\\Documents\\\\Web\\\\proyecto-desarrollo-web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { User } from 'src/app/model/user';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserControllerService {\n  constructor(http) {\n    this.http = http;\n    this.currentUser = null;\n    this.listUsers = [];\n  }\n\n  login(username, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        var responseBody = yield _this.http.post(`${environment.baseURL}/login`, {\n          username: username,\n          password: password\n        }, {\n          responseType: \"text\"\n        }).toPromise();\n        window.sessionStorage.setItem(\"jwt\", responseBody);\n        yield _this.getUserByUsername(username).then(value => {\n          _this.currentUser = value;\n        });\n        return true;\n      } catch (e) {\n        console.error(e);\n        _this.currentUser = null;\n        return false;\n      }\n    })();\n  }\n\n  addUser(name, username, password) {\n    try {\n      this.http.post(`${environment.baseURL}/user/create`, {\n        username: username,\n        password: password,\n        name: name\n      }).toPromise();\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n\n    return true;\n  }\n\n  modUser(name, username, password) {\n    this.currentUser.setName(name);\n    this.currentUser.setUsername(username); //TODO: enviar peticion de modificacion de usuario en backend\n  }\n\n  getCurrentUser() {\n    return this.currentUser;\n  }\n\n  getAllUsers() {\n    return this.listUsers;\n  }\n\n  getUserByUsername(username) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var user = new User();\n\n      try {\n        var json = yield _this2.http.get(`${environment.baseURL}/user/${username}`).toPromise();\n        user.setUsername(json.username);\n        user.setName(json.name);\n        user.setIsAdmin(json.admin);\n        var shoppingCart = json.shoppingCart;\n        shoppingCart.forEach(element => {\n          user.addPurchase(element.productId, element.quantity);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      return user;\n    })();\n  }\n\n  removeUser(username) {\n    this.http.delete(`${environment.baseURL}/user/delete/${username}`);\n  }\n\n  logOut() {\n    this.currentUser = null;\n    window.localStorage.removeItem(\"jwt\");\n  }\n\n}\n\nUserControllerService.ɵfac = function UserControllerService_Factory(t) {\n  return new (t || UserControllerService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nUserControllerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserControllerService,\n  factory: UserControllerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Juan Camilo Merchan/Documents/Web/proyecto-desarrollo-web/src/app/service/user-controller/user-controller.service.ts"],"names":["User","environment","i0","i1","UserControllerService","constructor","http","currentUser","listUsers","login","username","password","responseBody","post","baseURL","responseType","toPromise","window","sessionStorage","setItem","getUserByUsername","then","value","e","console","error","addUser","name","modUser","setName","setUsername","getCurrentUser","getAllUsers","user","json","get","setIsAdmin","admin","shoppingCart","forEach","element","addPurchase","productId","quantity","removeUser","delete","logOut","localStorage","removeItem","ɵfac","UserControllerService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { User } from 'src/app/model/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class UserControllerService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.currentUser = null;\r\n        this.listUsers = [];\r\n    }\r\n    async login(username, password) {\r\n        try {\r\n            var responseBody = await this.http.post(`${environment.baseURL}/login`, { username: username, password: password }, { responseType: \"text\" }).toPromise();\r\n            window.sessionStorage.setItem(\"jwt\", responseBody);\r\n            await this.getUserByUsername(username).then(value => {\r\n                this.currentUser = value;\r\n            });\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            this.currentUser = null;\r\n            return false;\r\n        }\r\n    }\r\n    addUser(name, username, password) {\r\n        try {\r\n            this.http.post(`${environment.baseURL}/user/create`, { username: username, password: password, name: name }).toPromise();\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    modUser(name, username, password) {\r\n        this.currentUser.setName(name);\r\n        this.currentUser.setUsername(username);\r\n        //TODO: enviar peticion de modificacion de usuario en backend\r\n    }\r\n    getCurrentUser() {\r\n        return this.currentUser;\r\n    }\r\n    getAllUsers() {\r\n        return this.listUsers;\r\n    }\r\n    async getUserByUsername(username) {\r\n        var user = new User();\r\n        try {\r\n            var json = await this.http.get(`${environment.baseURL}/user/${username}`).toPromise();\r\n            user.setUsername(json.username);\r\n            user.setName(json.name);\r\n            user.setIsAdmin(json.admin);\r\n            var shoppingCart = json.shoppingCart;\r\n            shoppingCart.forEach((element) => {\r\n                user.addPurchase(element.productId, element.quantity);\r\n            });\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n        return user;\r\n    }\r\n    removeUser(username) {\r\n        this.http.delete(`${environment.baseURL}/user/delete/${username}`);\r\n    }\r\n    logOut() {\r\n        this.currentUser = null;\r\n        window.localStorage.removeItem(\"jwt\");\r\n    }\r\n}\r\nUserControllerService.ɵfac = function UserControllerService_Factory(t) { return new (t || UserControllerService)(i0.ɵɵinject(i1.HttpClient)); };\r\nUserControllerService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserControllerService, factory: UserControllerService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}